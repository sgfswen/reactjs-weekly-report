{
  "name": "classnames",
  "version": "1.1.4",
  "description": "A simple utility for conditionally joining classNames together",
  "main": "index.js",
  "author": {
    "name": "Jed Watson"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/JedWatson/classnames.git"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha tests.js"
  },
  "keywords": [
    "react",
    "css",
    "classes",
    "classname",
    "classnames",
    "util",
    "utility"
  ],
  "devDependencies": {
    "mocha": "^2.1.0"
  },
  "readme": "Classnames\n===========\n\nA simple javascript utility for conditionally joining classNames together.\n\nInstall with npm, or download the [UMD version](http://wzrd.in/standalone/classnames@1) (provides window.classnames, or defines the AMD modules 'classnames').\n\n```sh\nnpm install classnames\n```\n\nThe `classNames` function takes any number of arguments which can be a string or object.\nThe argument `'foo'` is short for `{foo: true}`. If the value of the key is falsy, it won't be included in the output.\n\n```js\nclassNames('foo', 'bar'); // => 'foo bar'\nclassNames('foo', {bar: true}); // => 'foo bar'\nclassNames({foo: true}, {bar: true}); // => 'foo bar'\nclassNames({foo: true, bar: true}); // => 'foo bar'\n\n// lots of arguments of various types\nclassNames('foo', {bar: true, duck: false}, 'baz', {quux: true}) // => 'foo bar baz quux'\n\n// other falsy values are just ignored\nclassNames(null, false, 'bar', undefined, 0, 1, {baz: null}, ''); // => 'bar 1'\n\n// if you have an array of these, use apply\nvar array = ['foo', {bar: true}];\nclassNames.apply(null, array); // => 'foo bar'\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/JedWatson/classnames/issues"
  },
  "_id": "classnames@1.1.4",
  "dist": {
    "shasum": "3f8f3dea7488ab83c51e556a569fa0c7bd579a3c"
  },
  "_from": "classnames@1.1.x",
  "_resolved": "https://registry.npmjs.org/classnames/-/classnames-1.1.4.tgz"
}
